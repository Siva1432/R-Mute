{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/components/app/app.component.css","webpack:///./src/app/components/app/app.component.html","webpack:///./src/app/components/app/app.component.ts","webpack:///./src/app/gaurds/app.gaurd.ts","webpack:///./src/app/root.module.ts","webpack:///./src/app/root.routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./app.routing\": [\n\t\t\"./src/app/app.routing.ts\",\n\t\t\"common\",\n\t\t\"app-routing\"\n\t],\n\t\"./editor-module.routing\": [\n\t\t\"./src/app/editor-module.routing.ts\",\n\t\t\"common\",\n\t\t\"editor-module-routing\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9hcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\r\nimport { Injectable} from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { User } from '../services/UserModel';\r\n\r\n\r\n@Injectable()\r\nexport class AppGaurd implements CanActivate {\r\n    constructor( private cs:CookieService,\r\n                 private router:Router,\r\n                 private http:HttpClient,\r\n                 ){}\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ) : Observable<boolean> | Promise<boolean> | boolean { \r\n        const xsrfCookie = this.cs.get('xsrfToken');\r\n        console.log('got xsrfCookie :', xsrfCookie);\r\n        if(xsrfCookie){\r\n        const httpOptions = {\r\n                headers: new HttpHeaders({\r\n                    'Content-Type':  'application/json'\r\n                    }),observe:'response',\r\n                        withCredentials:'true'\r\n                };\r\n                \r\n            this.http.post('http://localhost:4500/authorize/getuser',httpOptions)\r\n            .subscribe((res:any)=>{\r\n            console.log('got response',res);\r\n            if(res._id){\r\n            this.router.navigate(['/authorized/',res._id],{queryParamsHandling:'merge'});\r\n            }else{\r\n\r\n            };\r\n            });\r\n\r\n            \r\n        return false;\r\n        }else{\r\n            return true;\r\n        }\r\n       \r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppComponent } from './components/app/app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RootRoutingModule } from './root.routing.module';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AppGaurd } from './gaurds/app.gaurd';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n  CommonModule,\n  HttpClientModule,\n  BrowserModule,\n  FormsModule,\n  RootRoutingModule,\n  ],\n  providers:[\n    CookieService,\n    AppGaurd\n  ],\n  bootstrap:[\n    AppComponent\n  ]\n})\nexport class RootModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './components/app/app.component';\nimport { AppGaurd } from './gaurds/app.gaurd';\n\nconst rootRoutes:Routes=[\n  {\n    path:'authorized',\n    component:AppComponent,\n    loadChildren:'./editor-module.routing#EditorRoutingModule',\n    \n  },\n  {\n    path:'',\n    loadChildren:'./app.routing#AppRoutingModule',\n    canActivate:[AppGaurd]\n  }\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(rootRoutes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class RootRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { RootModule } from './app/root.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(RootModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}