{"version":3,"sources":["webpack:///./node_modules/ngx-cookie-service/cookie-service/cookie.service.js","webpack:///./node_modules/ngx-cookie-service/index.js","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/paths.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACgF;AAClB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yEAAiB;AACrD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,mDAAmD;AACnD;AACA;AACA,oCAAoC;AACpC;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gDAAgD,EAAE,UAAU;AAC5D,oDAAoD,kCAAkC;AACtF;AACA;AACA,CAAC;AACwB;AACzB;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB;AACA;AACA,4CAA4C;AAC5C,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,IAAI;AAC3E,KAAK,OAAO,4DAAc,gBAAgB,OAAO,oDAAM,SAAS,yDAAW,IAAI,IAAI;AACnF,EAAE;AACF,0C;;;;;;;;;;;;ACnJA;AAAA;AAAA;AAAA;AAAgD;AAChD,iC;;;;;;;;;;;;;;;;;;;;;ACA2C;AACmB;AAErB;AAEW;AACD;AAKnD;IAKE,qBAAoB,IAAe,EAAS,MAAa,EAAS,EAAgB;QAA9D,SAAI,GAAJ,IAAI,CAAW;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,OAAE,GAAF,EAAE,CAAc;QAFlF,YAAO,GAAE,IAAI,oDAAe,CAAO,EAAC,EAAE,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,KAAK,EAAC,EAAE,EAAC,cAAc,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,CAAC,CAAC;QAO5G,gBAAW,GAAG,UAAS,WAAW;YAApB,iBASZ;YAPC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBACnF,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAC,GAAG,CAAC,CAAC;gBAC5C,KAAI,CAAC,IAAI,GAAC,GAAG,CAAC;gBAEd,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,EAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,iBAAY,GAAG,UAAS,WAAW;YAApB,iBAQf;YAPC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;gBACpF,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAC,GAAG,CAAC,CAAC;gBAC5C,KAAI,CAAC,IAAI,GAAC,GAAG,CAAC;gBAEd,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,EAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAGF,WAAM,GAAC,UAAS,EAAS;YAAlB,iBAUN;YATC,IAAI,SAAiB,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAC,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,UAAC,GAAW;gBACxF,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAC,GAAG,CAAC,CAAC;gBAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;YAErD,CAAC,CAAC,CAAC;QAGL,CAAC,CAAC;IAnCD,CAAC;IAPS,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAMyB,+DAAU,EAAgB,sDAAM,EAAY,gEAAa;OALvE,WAAW,CA8CvB;IAAD,kBAAC;CAAA;AA9CuB;;;;;;;;;;;;;ACZxB;AAAA;AAAA;IAAA;QACC,WAAM,GAAQ,iCAAiC;QAC/C,cAAS,GAAI;YACN,OAAO,EAAC,IAAI,CAAC,MAAM,GAAC,UAAU;YAC9B,OAAO,EAAC,IAAI,CAAC,MAAM,GAAC,OAAO;SAC9B;IAEL,CAAC;IAAD,YAAC;AAAD,CAAC","file":"common.js","sourcesContent":["// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nimport { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nvar CookieService = (function () {\n    function CookieService(\n        // The type `Document` may not be used here. Although a fix is on its way,\n        // we will go with `any` for now to support Angular 2.4.x projects.\n        // Issue: https://github.com/angular/angular/issues/12631\n        // Fix: https://github.com/angular/angular/pull/14894\n        document, \n        // Get the `PLATFORM_ID` so we can check if we're in a browser.\n        platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * @param name Cookie name\n     * @returns {boolean}\n     */\n    CookieService.prototype.check = function (name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        var regExp = this.getCookieRegExp(name);\n        var exists = regExp.test(this.document.cookie);\n        return exists;\n    };\n    /**\n     * @param name Cookie name\n     * @returns {any}\n     */\n    CookieService.prototype.get = function (name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            var regExp = this.getCookieRegExp(name);\n            var result = regExp.exec(this.document.cookie);\n            return decodeURIComponent(result[1]);\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * @returns {}\n     */\n    CookieService.prototype.getAll = function () {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        var cookies = {};\n        var document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            var split = document.cookie.split(';');\n            for (var i = 0; i < split.length; i += 1) {\n                var currentCookie = split[i].split('=');\n                currentCookie[0] = currentCookie[0].replace(/^ /, '');\n                cookies[decodeURIComponent(currentCookie[0])] = decodeURIComponent(currentCookie[1]);\n            }\n        }\n        return cookies;\n    };\n    /**\n     * @param name     Cookie name\n     * @param value    Cookie value\n     * @param expires  Number of days until the cookies expires or an actual `Date`\n     * @param path     Cookie path\n     * @param domain   Cookie domain\n     * @param secure   Secure flag\n     * @param sameSite OWASP samesite token `Lax` or `Strict`\n     */\n    CookieService.prototype.set = function (name, value, expires, path, domain, secure, sameSite) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        if (expires) {\n            if (typeof expires === 'number') {\n                var dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + expires.toUTCString() + ';';\n            }\n        }\n        if (path) {\n            cookieString += 'path=' + path + ';';\n        }\n        if (domain) {\n            cookieString += 'domain=' + domain + ';';\n        }\n        if (secure) {\n            cookieString += 'secure;';\n        }\n        if (sameSite) {\n            cookieString += 'sameSite=' + sameSite + ';';\n        }\n        this.document.cookie = cookieString;\n    };\n    /**\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    CookieService.prototype.delete = function (name, path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        this.set(name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain);\n    };\n    /**\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     */\n    CookieService.prototype.deleteAll = function (path, domain) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        var cookies = this.getAll();\n        for (var cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain);\n            }\n        }\n    };\n    /**\n     * @param name Cookie name\n     * @returns {RegExp}\n     */\n    CookieService.prototype.getCookieRegExp = function (name) {\n        var escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    };\n    return CookieService;\n}());\nexport { CookieService };\nCookieService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nCookieService.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: InjectionToken, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n]; };\n//# sourceMappingURL=cookie.service.js.map","export * from './cookie-service/cookie.service';\n//# sourceMappingURL=index.js.map","\nimport { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { User} from './UserModel'\nimport { of, Subject, BehaviorSubject } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  User:User;\n  getUser= new BehaviorSubject<User>({id:'',firstname:'',lastname:'',email:'',collaborations:[],projects:[]});\n\n  constructor(private http:HttpClient,private router:Router,private cs:CookieService, ) {\n\n   }\n\n   \n  submitLogin = function(credentials){\n     \n     this.http.post(`http://localhost:4500/authenticate/login`,credentials).subscribe((val)=>{\n       console.log(`got response from server`,val);\n       this.User=val;\n       \n       this.router.navigate(['/authorized/dashboard',val.id]);\n       this.getUser.next(val);\n     });\n   };\n\n   submitSignUp = function(credentials){\n    this.http.post(`http://localhost:4500/authenticate/signup`,credentials).subscribe((val)=>{\n      console.log(`got response from server`,val);\n      this.User=val;\n     \n      this.router.navigate(['/authorized/dashboard',val.id]);\n      this.getUser.next(val);\n    });\n  };\n  \n\n  logout=function(id:number){\n    let returnVal:boolean;\n    this.http.post(`http://localhost:4500/authenticate/logout`,{id:id}).subscribe((val:boolean)=>{\n      console.log(`got result from logout route`,val);\n      this.router.navigate(['/login']);\n      console.log('remaining cookies', this.cs.getAll());\n      \n    });\n    \n\n  };\n\n\n\n}\n","export class Paths{\r\n origin:string='http://localhost:4500/authorize'\r\n endPoints:{}={\r\n        isValid:this.origin+'/isvalid',\r\n        getRole:this.origin+'/role'\r\n    }\r\n\r\n}"],"sourceRoot":""}